{"version":3,"sources":["images/Main-logo-white.png","Pages/Shared/Navigation/Navigation.js","Pages/Shared/Sidebar/Sidebar.js","Pages/Home/JobOpenings/JobFilters/JobFilters.js","Pages/Home/JobOpenings/JobDescription/JobDescription.js","Pages/Home/JobOpenings/Positions/Positions.js","Pages/hooks/Main.js","Pages/Home/Home/Home.js","Pages/Profile/ProfileBanner/ProfileBanner.js","Pages/Profile/ProfileEdit/ProfileEdit.js","Pages/Profile/ProfileActivity/ProfileActivity.js","Pages/Profile/ProfileInfo/ProfileInfo.js","Pages/Profile/ProfileCv/ER Diagram for blog site.pdf","Pages/Profile/ProfileCv/ProfileCv.js","Pages/Profile/Profile.js","Pages/Authentication/Login/Login.js","Pages/Authentication/Register/Register.js","images/logo.png","Pages/Authentication/Authentication.js","Pages/CV/Experience/Experience.js","Pages/CV/Certificates/Certificates.js","Pages/CV/JobPreferences/JobPreferences.js","Pages/CV/Trainings/Trainings.js","Pages/CV/UploadCV/UploadCV.js","Pages/CV/DataTable/DataTable.js","Pages/CV/Education/Educations.js","Pages/CV/Skills/Skills.js","Pages/CV/PersonalAttributes/PersonalAttributes.js","Pages/CV/Cv.js","Pages/Apply/FilterQuestions/FilterQuestions.js","Pages/Apply/Apply.js","Pages/Home/JobOpenings/JobOpenings/JobOpenings.js","Pages/Candidates/Canddates.js","Pages/Home/JobOpenings/CreateJobOpenings/CreateJobOpenings.js","App.js","reportWebVitals.js","index.js"],"names":["AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","open","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","Navigation","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","onClose","MenuItem","onClick","to","mobileMenuId","renderMobileMenu","IconButton","size","color","Badge","badgeContent","Provider","value","Box","sx","display","className","CssBaseline","position","pl","backgroundColor","Toolbar","src","logo","height","style","alt","flexGrow","xs","md","alignItems","gap","edge","Sidebar","setOpen","boxShadow","onSelect","selected","Toggle","e","marginTop","Nav","defaultSelected","eventKey","Divider","JobFilters","Grid","container","spacing","item","sm","TextField","fullWidth","type","label","variant","placeholder","Position","jobDescription","p","minHeight","Typography","borderRight","pr","userSelect","textAlign","mt","margin","Button","Positions","offCanvas","setOffCanvas","hover","setHover","location","useLocation","lg","Paper","elevation","paddingInline","paddingBlock","pathname","onPointerOver","onPointerOut","gridTemplateColumns","fontWeight","textTransform","component","justifyContent","justifySelf","background","px","borderRadius","alignContent","JobDescription","Main","paddingInlineStart","paddingInlineEnd","Home","my","ProfileBanner","class","xmlns","viewBox","fill","stroke","cx","cy","r","x1","y1","x2","y2","d","x","y","rx","ry","ProfileEdit","ProfileActivity","ProfileInfo","ProfileMessages","setNumPages","pageNumber","file","cv","onLoadSuccess","numPages","Profile","Helmet","href","rel","integrity","crossorigin","ProfileCv","ValidationTextField","borderColor","borderLeftWidth","Login","useForm","register","handleSubmit","reset","isLoading","setIsLoading","LinearProgress","onSubmit","data","console","log","fetch","headers","method","body","JSON","stringify","then","res","json","marginBlock","InputProps","startAdornment","InputAdornment","required","marginBlockStart","Register","moment","b_date","setB_date","gender","setGender","passwordError","setPasswordError","watch","errors","formState","LocalizationProvider","dateAdapter","DateAdapter","birthdate","format","DatePicker","onChange","newValue","renderInput","params","FormControl","InputLabel","shrink","Select","input","OutlinedInput","notched","flexDirection","labelId","target","IconComponent","confirmPassword","password","message","error","helperText","Authentication","Experience","startDate","setStartDate","endDate","setEndDate","TextareaAutosize","minRows","Certificates","JobPreferences","marginBottom","defaultValue","Trainings","Input","UploadCV","setFile","useEffect","length","name","htmlFor","DataTable","theads","rows","TableContainer","Table","minWidth","TableHead","TableRow","map","thead","TableCell","TableBody","row","index","Object","keys","align","scope","Educations","gradYear","setGradYear","setRows","views","options","Skills","Stack","Autocomplete","multiple","getOptionLabel","option","filterSelectedOptions","PersonalAttributes","setBirthdate","paddingBottom","borderBottom","CV","cvForm","setCvForm","cvSection","document","querySelectorAll","forEach","addEventListener","classList","remove","add","bgcolor","mb","List","ListItem","disablePadding","ListItemButton","ListItemIcon","ListItemText","primary","FilterQuestions","multiline","maxRows","Apply","JobOpenings","Canddates","CreateJobOpenings","lastDate","setLastDate","shiftStart","setShiftStart","shiftEnd","setShiftEnd","level","setLevel","shift","setShift","setLocation","department","setDepartment","description","setDescription","editorRef","useRef","py","validTill","startTime","endTime","TimePicker","onInit","evt","editor","current","init","menubar","plugins","toolbar","content_style","onEditorChange","newText","createTheme","typography","fontFamily","join","App","ThemeProvider","path","element","padding","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f65698d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Main-logo-white.a3a40eb0.png\";","import { useState } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { IoIosNotifications } from \"react-icons/io\";\r\nimport { MdAccountCircle, MdMoreVert } from \"react-icons/md\";\r\nimport Box from \"@mui/material/Box\";\r\nimport MuiAppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\n\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nimport { Menu } from \"@mui/material\";\r\nimport { MenuItem } from \"@mui/material\";\r\nimport { Badge } from \"@mui/material\";\r\nimport logo from \"../../../images/Main-logo-white.png\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n    shouldForwardProp: (prop) => prop !== \"open\",\r\n})(({ theme, open }) => ({\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    }),\r\n}));\r\n\r\nconst Navigation = ({ open }) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuId = \"primary-search-account-menu\";\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"right\",\r\n            }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n            }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>\r\n                <Link to=\"/profile\">My Profile</Link>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>\r\n                <NavLink to=\"/profile/edit\">Edit CV</NavLink>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>Logout</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"right\",\r\n            }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n            }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem>\r\n                <IconButton\r\n                    size=\"large\"\r\n                    aria-label=\"show 17 new notifications\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <Badge badgeContent={17} color=\"error\">\r\n                        <IoIosNotifications />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Notifications</p>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <IconButton\r\n                    size=\"large\"\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <MdAccountCircle />\r\n                </IconButton>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <NavLink to=\"/login\">\r\n                \r\n                    Sign In\r\n                </NavLink>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <NavLink to=\"/register\">\r\n                    Sign Up\r\n                </NavLink>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <IconContext.Provider value={{ color: \"white\" }}>\r\n            <Box sx={{ display: \"flex\" }} className=\"topbar\">\r\n                <CssBaseline />\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    sx={{ pl: 8, backgroundColor: \"#182a59\" }}\r\n                >\r\n                    <Toolbar>\r\n                        <NavLink to=\"/\">\r\n                            {!open && (\r\n                                <img\r\n                                    src={logo}\r\n                                    height=\"50\"\r\n                                    style={{ backgroundColor: \"#182a59\" }}\r\n                                    width=\"110\"\r\n                                    alt=\"\"\r\n                                />\r\n                            )}\r\n                        </NavLink>\r\n\r\n                        <Box sx={{ flexGrow: 1 }} />\r\n                        <Box sx={{ display: { xs: \"none\", md: \"flex\" , alignItems: \"center\", gap: \".8rem\"} }}>\r\n                            <IconButton\r\n                                size=\"large\"\r\n                                aria-label=\"show 17 new notifications\"\r\n                                color=\"inherit\"\r\n                            >\r\n                                <Badge badgeContent={17} color=\"error\">\r\n                                    <IoIosNotifications />\r\n                                </Badge>\r\n                            </IconButton>\r\n                            <IconButton\r\n                                size=\"large\"\r\n                                edge=\"end\"\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls={menuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleProfileMenuOpen}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <MdAccountCircle />\r\n                            </IconButton>\r\n                            <NavLink to=\"/login\">\r\n                                Sign In\r\n                            </NavLink>\r\n                            <NavLink to=\"/register\">\r\n                                Sign Up\r\n                            </NavLink>\r\n                        </Box>\r\n                        <Box sx={{ display: { xs: \"flex\", md: \"none\" } }}>\r\n                            <IconButton\r\n                                size=\"large\"\r\n                                aria-label=\"show more\"\r\n                                aria-controls={mobileMenuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMobileMenuOpen}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <MdMoreVert />\r\n                            </IconButton>\r\n                        </Box>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                {renderMobileMenu}\r\n                {renderMenu}\r\n            </Box>\r\n        </IconContext.Provider>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport SideNav, { NavItem, NavIcon, NavText } from \"@trendmicro/react-sidenav\";\r\nimport logo from \"../../../images/Main-logo-white.png\";\r\n// Be sure to include styles at some point, probably during your bootstraping\r\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { AiOutlineHome } from \"react-icons/ai\";\r\nimport { MdOutlineCalculate } from \"react-icons/md\";\r\nimport { VscRocket } from \"react-icons/vsc\";\r\nimport { BiBriefcase } from \"react-icons/bi\";\r\nimport \"./Sidebar.css\";\r\nimport { Box } from \"@mui/system\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Divider } from \"@mui/material\";\r\nconst Sidebar = ({ open, setOpen }) => {\r\n    const handleAppBar = (e) => {\r\n        open ? setOpen(false) : setOpen(true);\r\n    };\r\n    return (\r\n        <IconContext.Provider value={{ color: \"black\" }}>\r\n            <SideNav\r\n                style={{\r\n                    zIndex: 9999,\r\n                    backgroundColor: \"white\",\r\n                    boxShadow: \"1px 1px 6px #182a59\",\r\n                }}\r\n                onSelect={(selected) => {\r\n                    // Add your code here\r\n                }}\r\n            >\r\n                <SideNav.Toggle\r\n                    onClick={handleAppBar}\r\n                    style={{ backgroundColor: \"#182a59\" }}\r\n                />\r\n                <Box sx={{ backgroundColor: \"#182a59\" }}>\r\n                    <NavLink to=\"/\">\r\n                        {open && (\r\n                            <img\r\n                                src={logo}\r\n                                height=\"51\"\r\n                                style={{ marginTop: \"10px\" }}\r\n                                width=\"110\"\r\n                                alt=\"\"\r\n                            />\r\n                        )}\r\n                    </NavLink>\r\n                </Box>\r\n                <SideNav.Nav defaultSelected=\"home\">\r\n                    <NavItem eventKey=\"home\">\r\n                        <NavIcon>\r\n                            <NavLink to=\"/\">\r\n                                <AiOutlineHome />\r\n                            </NavLink>\r\n                        </NavIcon>\r\n                        <NavText>\r\n                            <NavLink to=\"/\">Home</NavLink>\r\n                        </NavText>\r\n                    </NavItem>\r\n                    <Divider />\r\n                    <NavItem eventKey=\"hrm\">\r\n                        <NavIcon>\r\n                            <VscRocket />\r\n                        </NavIcon>\r\n                        <NavText>HRMS</NavText>\r\n                        <NavItem eventKey=\"hrm/linechart\">\r\n                            <NavText>Dashboard</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey=\"hrm/barchart\">\r\n                            <NavText>Department</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey=\"hrm/barchart\">\r\n                            <NavText>Employee</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey=\"hrm/barchart\">\r\n                            <NavText>Activities</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey=\"hrm/barchart\">\r\n                            <NavText>Holidays</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey=\"hrm/barchart\">\r\n                            <NavText>Events</NavText>\r\n                        </NavItem>\r\n                    </NavItem>\r\n                    <Divider />\r\n                    <NavItem eventKey=\"accounts\">\r\n                        <NavIcon>\r\n                            <MdOutlineCalculate />\r\n                        </NavIcon>\r\n                        <NavText>Accounts</NavText>\r\n                        <NavItem eventKey=\"accounts/account\">\r\n                            <NavText>Accounts</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey=\"accounts/payroll\">\r\n                            <NavText>Payroll</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey=\"accounts/report\">\r\n                            <NavText>Report</NavText>\r\n                        </NavItem>\r\n                    </NavItem>\r\n                    <Divider />\r\n                    <NavItem eventKey=\"recrutment\">\r\n                        <NavIcon>\r\n                            <BiBriefcase />\r\n                        </NavIcon>\r\n                        <NavText>Job Portal</NavText>\r\n                        <NavItem eventKey=\"recrutment/account\">\r\n                            <NavText>Job Dashboard</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey=\"recrutment/openings\">\r\n                            <NavText>\r\n                                <NavLink to=\"/openings\">Openings</NavLink>\r\n                            </NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey=\"recrutment/payroll\">\r\n                            <NavText>Positions</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey=\"recrutment/report\">\r\n                            <NavText>Applicants</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey=\"recrutment/report\">\r\n                            <NavText>Resumes</NavText>\r\n                        </NavItem>\r\n                    </NavItem>\r\n                </SideNav.Nav>\r\n            </SideNav>\r\n        </IconContext.Provider>\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n","\r\nimport {\r\n    Grid,\r\n    TextField,\r\n} from \"@mui/material\";\r\nconst JobFilters = () => {\r\n    return (\r\n        <>\r\n            <Grid container spacing={3}>\r\n                <Grid item  md={6} sm={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"filled-basic\"\r\n                        type=\"search\"\r\n                        label=\"Search\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"search by position/level/type/department\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default JobFilters;\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport '@fontsource/roboto/400.css';\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst Position = ({ jobDescription }) => {\r\n    return (\r\n        <Box sx={{ flexGrow: 1, boxShadow: 3, p: 5, minHeight: \"100%\" }}>\r\n            <Box>\r\n                <Typography variant=\"h6\" sx={{ borderRight: '1px solid black', display: 'inline-block', pr: 3 }}>\r\n                    {jobDescription? jobDescription.position : \"hello\"}\r\n                </Typography>\r\n                <Typography variant=\"subtitle\" sx={{ display: 'inline-block', pl: 3, userSelect: 'none' }}>\r\n                    TechForing Ltd.\r\n                </Typography>\r\n            </Box>\r\n            <Box style={{ marginTop: '2rem' }}>\r\n                {/* {jobDescription.description} */}\r\n                subtitle1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                subtitle2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n                body1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n\r\n                body2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n\r\n                BUTTON TEXT\r\n                caption text\r\n                OVERLINE TEXT\r\n            </Box>\r\n\r\n            <Grid container style={{ marginTop: '2rem' }}>\r\n                <Box sx={{ width: '100%' }}>\r\n                    <Typography variant=\"subtitle\" sx={{ textAlign: 'left', mt: 5 }}>\r\n                        {/* Type: {jobDescription.type} <br />\r\n                        Location: {jobDescription.location} <br />\r\n                        Level: {jobDescription.level} <br />\r\n                        Shift: {jobDescription.shift} */}\r\n                    </Typography>\r\n                </Box>\r\n                <br />\r\n                <NavLink to=\"/apply\" style={{ margin: '2rem auto' }}>\r\n                    <Button variant=\"contained\" color=\"success\">\r\n                        Apply\r\n                    </Button>\r\n                </NavLink>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Position;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Drawer, Paper, Typography, Grid, Box } from \"@mui/material\";\r\nimport { MdLocationOn, MdOutlineCategory } from \"react-icons/md\";\r\nimport { RiBuilding2Fill } from \"react-icons/ri\";\r\nimport { GoBriefcase } from \"react-icons/go\";\r\nimport { IoIosPeople } from \"react-icons/io\";\r\nimport { SiRedhatopenshift } from \"react-icons/si\";\r\nimport JobDescription from \"../JobDescription/JobDescription\";\r\nimport \"./positions.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport { display } from \"@mui/system\";\r\n\r\nconst Positions = () => {\r\n    const [offCanvas, setOffCanvas] = useState(false );\r\n    const [hover, setHover] = useState(false);\r\n    const location = useLocation();\r\n    // const overlayToggle = {\r\n    //     display: ;\r\n    // }\r\n    return (\r\n        <>\r\n            <Grid item lg={12} md={12} xs={12}>\r\n                <Paper\r\n                    elevation={8}\r\n                    variant=\"outlined\"\r\n                    sx={{\r\n                        paddingInline: \"1rem\",\r\n                        paddingBlock: \".8rem\",\r\n                        backgroundColor:\r\n                            location.pathname !== \"/openings\"\r\n                                ? \"#11882238\"\r\n                                : hover\r\n                                ? \"#ededed\"\r\n                                : \"#fff\",\r\n                    }}\r\n                    onPointerOver={() => setHover(true)}\r\n                    onPointerOut={() => setHover(false)}\r\n                >\r\n                    <Box\r\n                        sx={{\r\n                            display: \"grid\",\r\n                            gridTemplateColumns: \"2fr 3fr 1fr\",\r\n                            alignItems: \"center\",\r\n                        }}\r\n                        className={\"openingContainer\"}\r\n                    >\r\n                        <Typography\r\n                            sx={{\r\n                                fontWeight: 600,\r\n                                textAlign: \"start\",\r\n                                textTransform: \"uppercase\",\r\n                            }}\r\n                        >\r\n                            Front end web developer\r\n                        </Typography>\r\n                        {location.pathname !== \"/openings\" ? (\r\n                            <Box\r\n                                className=\"details\"\r\n                                sx={{\r\n                                    display: \"grid\",\r\n                                    gridTemplateColumns: \"repeat(6, 1fr)\",\r\n                                }}\r\n                            >\r\n                                <Typography\r\n                                    component=\"div\"\r\n                                    className=\"openingInfos\"\r\n                                    sx={{ display: \"grid\" }}\r\n                                >\r\n                                    <Typography\r\n                                        component=\"small\"\r\n                                        sx={{\r\n                                            display: \"flex\",\r\n                                            alignItems: \"center\",\r\n                                            justifyContent: \"center\",\r\n                                            gap: \"5px\",\r\n                                        }}\r\n                                    >\r\n                                        <MdOutlineCategory />\r\n                                        Type\r\n                                    </Typography>\r\n                                    <Typography component=\"p\">\r\n                                        Full Time\r\n                                    </Typography>\r\n                                </Typography>\r\n                                <Typography\r\n                                    component=\"div\"\r\n                                    className=\"openingInfos\"\r\n                                    sx={{ display: \"grid\" }}\r\n                                >\r\n                                    <Typography\r\n                                        component=\"small\"\r\n                                        sx={{\r\n                                            display: \"flex\",\r\n                                            alignItems: \"center\",\r\n                                            justifyContent: \"center\",\r\n                                            gap: \"5px\",\r\n                                        }}\r\n                                    >\r\n                                        <MdLocationOn />\r\n                                        Location\r\n                                    </Typography>\r\n                                    <Typography component=\"p\">\r\n                                        Remote\r\n                                    </Typography>\r\n                                </Typography>\r\n                                <Typography\r\n                                    component=\"div\"\r\n                                    className=\"openingInfos\"\r\n                                    sx={{ display: \"grid\" }}\r\n                                >\r\n                                    <Typography\r\n                                        component=\"small\"\r\n                                        sx={{\r\n                                            display: \"flex\",\r\n                                            alignItems: \"center\",\r\n                                            justifyContent: \"center\",\r\n                                            gap: \"5px\",\r\n                                        }}\r\n                                    >\r\n                                        <RiBuilding2Fill />\r\n                                        Level\r\n                                    </Typography>\r\n                                    <Typography component=\"p\">\r\n                                        Senior\r\n                                    </Typography>\r\n                                </Typography>\r\n                                <Typography\r\n                                    component=\"div\"\r\n                                    className=\"openingInfos\"\r\n                                    sx={{ display: \"grid\" }}\r\n                                >\r\n                                    <Typography\r\n                                        component=\"small\"\r\n                                        sx={{\r\n                                            display: \"flex\",\r\n                                            alignItems: \"center\",\r\n                                            justifyContent: \"center\",\r\n                                            gap: \"5px\",\r\n                                        }}\r\n                                    >\r\n                                        <GoBriefcase />\r\n                                        Department\r\n                                    </Typography>\r\n                                    <Typography component=\"p\">\r\n                                        Development\r\n                                    </Typography>\r\n                                </Typography>\r\n                                <Typography\r\n                                    component=\"div\"\r\n                                    className=\"openingInfos\"\r\n                                    sx={{ display: \"grid\" }}\r\n                                >\r\n                                    <Typography\r\n                                        component=\"small\"\r\n                                        sx={{\r\n                                            display: \"flex\",\r\n                                            alignItems: \"center\",\r\n                                            justifyContent: \"center\",\r\n                                            gap: \"5px\",\r\n                                        }}\r\n                                    >\r\n                                        <SiRedhatopenshift />\r\n                                        Shift\r\n                                    </Typography>\r\n                                    <Typography component=\"p\">Night</Typography>\r\n                                </Typography>\r\n                                <Typography\r\n                                    component=\"div\"\r\n                                    className=\"openingInfos\"\r\n                                    sx={{ display: \"grid\" }}\r\n                                >\r\n                                    <Typography\r\n                                        component=\"small\"\r\n                                        sx={{\r\n                                            display: \"flex\",\r\n                                            alignItems: \"center\",\r\n                                            justifyContent: \"center\",\r\n                                            gap: \"5px\",\r\n                                        }}\r\n                                    >\r\n                                        <IoIosPeople />\r\n                                        Vacancies\r\n                                    </Typography>\r\n                                    <Typography component=\"p\">2</Typography>\r\n                                </Typography>\r\n                            </Box>\r\n                        ) : (\r\n                            <Box\r\n                                className=\"details\"\r\n                                sx={{\r\n                                    justifySelf: \"center\",\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"space-around\",\r\n                                    width: \"100%\",\r\n                                }}\r\n                            >\r\n                                <Typography\r\n                                    component=\"div\"\r\n                                    className=\"openingInfos\"\r\n                                    sx={{\r\n                                        background: \"#cedd7a\",\r\n                                        px: 2,\r\n                                        borderRadius: \"1rem\",\r\n                                        color: \"#fff\",\r\n                                    }}\r\n                                >\r\n                                    <Typography component=\"p\">\r\n                                        Full Time\r\n                                    </Typography>\r\n                                </Typography>\r\n                                <Typography\r\n                                    component=\"div\"\r\n                                    className=\"openingInfos\"\r\n                                    sx={{\r\n                                        display: \"flex\",\r\n                                        gap: \".5rem\",\r\n                                        alignContent: \"center\",\r\n                                    }}\r\n                                >\r\n                                    Applicant:\r\n                                    <Typography\r\n                                        component=\"strong\"\r\n                                        sx={{ fontWeight: 800 }}\r\n                                    >\r\n                                        0\r\n                                    </Typography>\r\n                                </Typography>\r\n                                <Typography\r\n                                    component=\"div\"\r\n                                    className=\"openingInfo\"\r\n                                >\r\n                                    Department\r\n                                </Typography>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Typography\r\n                            className=\"openingInfos\"\r\n                            sx={{\r\n                                display: \"flex\",\r\n                                textAlign: \"center\",\r\n                                alignItems: \"center\",\r\n                            }}\r\n                        >\r\n                            <Button onClick={()=> setOffCanvas(!offCanvas)}>View</Button>\r\n                            <NavLink to=\"/edit\">\r\n                                <Button>Edit</Button>\r\n                            </NavLink>\r\n                        </Typography>\r\n                    </Box>\r\n                </Paper>\r\n            </Grid>\r\n            <div className=\"drawer\">\r\n                <div className=\"overlay\" style={{display: offCanvas && \"block\"}} onClick={()=> setOffCanvas(false)}></div>\r\n                <div className={`jobDrawer ${offCanvas && \"showDrawer\"}`}>{<JobDescription />}</div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Positions;\r\n","import { styled } from '@mui/material/styles';\r\nimport { Box } from '@mui/system';\r\n\r\nexport const Main = styled(Box)(({ theme }) => ({\r\n    marginTop: '100px',\r\n    marginLeft: '100px',\r\n    paddingInlineStart: '1rem',\r\n    paddingInlineEnd: '2rem',\r\n  }));","import { Typography } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport Navigation from \"../../Shared/Navigation/Navigation\";\r\nimport Sidebar from \"../../Shared/Sidebar/Sidebar\";\r\nimport JobFilters from \"../JobOpenings/JobFilters/JobFilters\";\r\nimport Positions from \"../JobOpenings/Positions/Positions\";\r\nimport { Main } from './../../hooks/Main';\r\nimport { Box } from '@mui/system';\r\n\r\nconst Home = () => {\r\n    const [open, setOpen] = useState(false);\r\n    return (\r\n        <>\r\n            <Navigation open={open} />\r\n            <Sidebar open={open} setOpen={setOpen} />\r\n            <Main>\r\n                <Typography component=\"h2\" sx={{fontWeight: \"700\"}}>\r\n                    Our Job Opening\r\n                </Typography>\r\n                <JobFilters />\r\n                <Box sx={{my:2}}/>\r\n                <Positions />\r\n            </Main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst ProfileBanner = () => {\r\n    return (\r\n        <div className=\"col-lg-4\">\r\n            <div className=\"profile-card-4 z-depth-3 px-3 pt-3\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body text-center bg-navy rounded-top\">\r\n                        <div className=\"user-box\">\r\n                            <img src=\"https://bootdey.com/img/Content/avatar/avatar7.png\" alt=\"user avatar\" />\r\n                        </div>\r\n                        <h5 className=\"mb-1 text-white fw-bold\">Serajus Salekin</h5>\r\n                        {/* <h6 className=\"text-light\">Software Engineer</h6> */}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <ul className=\"list-group shadow-none\">\r\n                            <li className=\"list-group-item\">\r\n                                <div className=\"list-icon\">\r\n                                    <i className=\"fa fa-phone-square\"></i>\r\n                                </div>\r\n                                <div className=\"list-details\">\r\n                                    <span>+8801927904143</span>\r\n                                    <small>Mobile Number</small>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                <div className=\"list-icon\">\r\n                                    <i className=\"fa fa-envelope\"></i>\r\n                                </div>\r\n                                <div className=\"list-details\">\r\n                                    <span>salekin.techforing@gmail.com</span>\r\n                                    <small>Email Address</small>\r\n                                </div>\r\n                            </li>\r\n                            {/* <li className=\"list-group-item\">\r\n                                <div className=\"list-icon\">\r\n                                    <i className=\"fa fa-globe\"></i>\r\n                                </div>\r\n                                <div className=\"list-details\">\r\n                                    <span>www.example.com</span>\r\n                                    <small>Website Address</small>\r\n                                </div>\r\n                            </li> */}\r\n                        </ul>\r\n                    </div>\r\n    \r\n                </div>\r\n                <div class=\"card mt-3\">\r\n                <ul class=\"list-group list-group-flush\">\r\n                  <li class=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\r\n                    <h6 class=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-globe me-2 icon-inline\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line><path d=\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"></path></svg>Website</h6>\r\n                    <span class=\"text-secondary\">https://abc.com</span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\r\n                    <h6 class=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-github me-2 icon-inline\"><path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path></svg>Github</h6>\r\n                    <span class=\"text-secondary\">abc</span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\r\n                    <h6 class=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-twitter me-2 icon-inline text-info\"><path d=\"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z\"></path></svg>Twitter</h6>\r\n                    <span class=\"text-secondary\">@abc</span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\r\n                    <h6 class=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-instagram me-2 icon-inline text-danger\"><rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"5\" ry=\"5\"></rect><path d=\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\"></path><line x1=\"17.5\" y1=\"6.5\" x2=\"17.51\" y2=\"6.5\"></line></svg>Instagram</h6>\r\n                    <span class=\"text-secondary\">abc</span>\r\n                  </li>\r\n                  <li class=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\r\n                    <h6 class=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-facebook me-2 icon-inline text-primary\"><path d=\"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z\"></path></svg>Facebook</h6>\r\n                    <span class=\"text-secondary\">abc</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default ProfileBanner;","import React from 'react';\r\n\r\nconst ProfileEdit = () => {\r\n    return (\r\n       \r\n        <div id=\"edit\">\r\n        <form>\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-lg-3 col-form-label form-control-label\">Full name</label>\r\n                <div className=\"col-lg-9\">\r\n                    <input className=\"form-control\" type=\"text\" value=\"Serajus Salekin\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-lg-3 col-form-label form-control-label\">Email</label>\r\n                <div className=\"col-lg-9\">\r\n                    <input className=\"form-control\" type=\"email\" value=\"salekin.techforing@gmail.com\" />\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"form-group row\">\r\n                <label className=\"col-lg-3 col-form-label form-control-label\">Nationality</label>\r\n                <div className=\"col-lg-9\">\r\n                    <input className=\"form-control\" type=\"text\" value=\"Bangladesh\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-lg-3 col-form-label form-control-label\">NID No.</label>\r\n                <div className=\"col-lg-9\">\r\n                    <input className=\"form-control\" type=\"number\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-lg-3 col-form-label form-control-label\">Change profile</label>\r\n                <div className=\"col-lg-9\">\r\n                    <input className=\"form-control\" type=\"file\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-lg-3 col-form-label form-control-label\">Address</label>\r\n                <div className=\"col-lg-9\">\r\n                    <input className=\"form-control\" type=\"text\" value=\"\" placeholder=\"Street\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                <div className=\"col-lg-6\">\r\n                    <input className=\"form-control\" type=\"text\" value=\"\" placeholder=\"City\" />\r\n                </div>\r\n                <div className=\"col-lg-3\">\r\n                    <input className=\"form-control\" type=\"text\" value=\"\" placeholder=\"State\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-lg-3 col-form-label form-control-label\">Password</label>\r\n                <div className=\"col-lg-9\">\r\n                    <input className=\"form-control\" type=\"password\" value=\"11111122333\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-lg-3 col-form-label form-control-label\">Confirm password</label>\r\n                <div className=\"col-lg-9\">\r\n                    <input className=\"form-control\" type=\"password\" value=\"11111122333\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-lg-3 col-form-label form-control-label\"></label>\r\n                <div className=\"col-lg-9\">\r\n                    <input type=\"reset\" className=\"btn btn-secondary me-2\" value=\"Cancel\" />\r\n                    <input type=\"button\" className=\"btn btn-navy\" value=\"Save Changes\" />\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default ProfileEdit;","import React from 'react';\r\n\r\nconst ProfileActivity = () => {\r\n    return (\r\n        <div className=\"col-md-12\">\r\n                <h5 className=\"mt-2 mb-3\"><span className=\"fa fa-clock-o ion-clock float-right\"></span> Recent Activity</h5>\r\n                <table className=\"table table-hover table-striped\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <strong>Abby</strong> joined ACME Project Team in <strong>`Collaboration`</strong>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <strong>Gary</strong> deleted My Board1 in <strong>`Discussions`</strong>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <strong>Kensington</strong> deleted MyBoard3 in <strong>`Discussions`</strong>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <strong>John</strong> deleted My Board1 in <strong>`Discussions`</strong>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <strong>Skell</strong> deleted his post Look at Why this is.. in <strong>`Discussions`</strong>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default ProfileActivity;","import React from 'react';\r\nimport ProfileActivity from '../ProfileActivity/ProfileActivity';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div className=\"tab-pane active show\" id=\"profile\">\r\n        <h5 className=\"mb-3\">User Profile</h5>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <h6>About</h6>\r\n                <p>\r\n                    Web Designer, UI/UX Engineer\r\n                </p>\r\n                <h6>Hobbies</h6>\r\n                <p>\r\n                    Indie music, skiing and hiking. I love the great outdoors.\r\n                </p>\r\n            </div>\r\n            <ProfileActivity></ProfileActivity>\r\n        </div>\r\n        \r\n    </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/ER Diagram for blog site.4159d6d3.pdf\";","// @ts-nocheck\r\nimport React, { useState } from 'react';\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\nimport cv from './ER Diagram for blog site.pdf'\r\nconst ProfileMessages = () => {\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [numPages, setNumPages] = useState(null);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n    return (\r\n        \r\n             <Document\r\n        file={cv}\r\n        onLoadSuccess={onDocumentLoadSuccess}\r\n      >\r\n        <Page pageNumber={pageNumber} />\r\n      </Document>\r\n                                \r\n                          \r\n    );\r\n};\r\n\r\nexport default ProfileMessages;","import \"./Profile.css\";\r\nimport Navigation from \"./../Shared/Navigation/Navigation\";\r\nimport ProfileBanner from \"./ProfileBanner/ProfileBanner\";\r\nimport ProfileEdit from \"./ProfileEdit/ProfileEdit\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport ProfileCv from \"./ProfileCv/ProfileCv\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport Sidebar from \"./../Shared/Sidebar/Sidebar\";\r\nimport { useState } from \"react\";\r\nimport { Main } from \"./../hooks/Main\";\r\nconst Profile = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const location = useLocation();\r\n    return (\r\n        <>\r\n            <Navigation open={open}/>\r\n            <Sidebar open={open} setOpen={setOpen}/>\r\n            <Main>\r\n                <Helmet>\r\n                    <link\r\n                        href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\r\n                        rel=\"stylesheet\"\r\n                        integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\r\n                        crossorigin=\"anonymous\"\r\n                    />\r\n                </Helmet>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <ProfileBanner />\r\n                        <div className=\"col-lg-8\">\r\n                            <div className=\"card z-depth-3\">\r\n                                <div className=\"card-body\">\r\n                                    <ul className=\"nav nav-pills nav-pills-primary nav-justified\">\r\n                                        <li className=\"nav-item\">\r\n                                            <NavLink\r\n                                                to=\"/profile\"\r\n                                                className=\"nav-link\"\r\n                                            >\r\n                                                <i className=\"icon-user\"></i>{\" \"}\r\n                                                <span className=\"hidden-xs\">\r\n                                                    Profile\r\n                                                </span>\r\n                                            </NavLink>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <NavLink\r\n                                                to=\"/profileCv\"\r\n                                                className=\"nav-link\"\r\n                                            >\r\n                                                <i className=\"icon-envelope-open\"></i>{\" \"}\r\n                                                <span className=\"hidden-xs\">\r\n                                                    View CV\r\n                                                </span>\r\n                                            </NavLink>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <NavLink\r\n                                                to=\"/my_jobs\"\r\n                                                className=\"nav-link\"\r\n                                            >\r\n                                                <i className=\"icon-note\"></i>{\" \"}\r\n                                                <span className=\"hidden-xs\">\r\n                                                    My applied jobs\r\n                                                </span>\r\n                                            </NavLink>\r\n                                        </li>\r\n                                    </ul>\r\n                                    <div className=\"tab-content p-3\">\r\n                                        {location.pathname === \"/profile\" ? (\r\n                                            <ProfileInfo />\r\n                                        ) : location.pathname ===\r\n                                          \"/profileCv\" ? (\r\n                                            <ProfileCv />\r\n                                        ) : (\r\n                                            <ProfileEdit />\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import { Button, Grid, InputAdornment, LinearProgress, TextField } from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"./Login.css\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { RiMailFill } from \"react-icons/ri\";\r\nimport { RiLockPasswordFill } from \"react-icons/ri\";\r\nimport { resolvePath } from \"react-router\";\r\nimport { useState } from \"react\";\r\nimport { Box } from \"@mui/system\";\r\nconst ValidationTextField = styled(TextField)({\r\n    \"& input:valid + fieldset\": {\r\n        borderColor: \"white\",\r\n    },\r\n    \"& input:valid:focus + fieldset\": {\r\n        borderLeftWidth: 6,\r\n        borderColor: \"#fff\", // override inline-style\r\n    },\r\n    \"& input:valid:hover + fieldset\": {\r\n        borderColor: \"white\",\r\n    },\r\n});\r\n\r\nconst Login = () => {\r\n    const { register, handleSubmit, reset } = useForm();\r\n    const [accessToken, setAccessToken] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data)\r\n        setIsLoading(true)\r\n        fetch(\"https://tfhrm.herokuapp.com/api/login/\", {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'content-type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log(res)\r\n                setIsLoading(false)\r\n            });\r\n        reset();\r\n    };\r\n    return (\r\n        <>\r\n            <h3>Sign in</h3>\r\n            {isLoading && <Box sx={{ width: '100%' }}>\r\n                <LinearProgress />\r\n            </Box>}\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Grid item xs={12} lg={12} sx={{ marginBlock: \"1.8rem\" }}>\r\n                    <ValidationTextField\r\n                        fullWidth\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <IconContext.Provider\r\n                                        value={{ color: \"white\" }}\r\n                                    >\r\n                                        <RiMailFill />\r\n                                    </IconContext.Provider>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                        {...register(\"email\", { required: true })}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} lg={12}>\r\n                    <ValidationTextField\r\n                        fullWidth\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        label=\"Password\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <IconContext.Provider\r\n                                        value={{ color: \"white\" }}\r\n                                    >\r\n                                        <RiLockPasswordFill />\r\n                                    </IconContext.Provider>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                        {...register(\"password\", { required: true })}\r\n                    />\r\n                </Grid>\r\n\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    sx={{ marginBlockStart: \"1.8rem\" }}\r\n                >\r\n                    Sign In\r\n                </Button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import {\r\n    Button,\r\n    FormControl,\r\n    Grid,\r\n    InputAdornment,\r\n    InputLabel,\r\n    MenuItem,\r\n    OutlinedInput,\r\n    Select,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport { FaPassport, FaUserAlt } from \"react-icons/fa\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport DateAdapter from \"@mui/lab/AdapterMoment\";\r\nimport {\r\n    BsFillCreditCard2FrontFill,\r\n    BsFillTelephoneFill,\r\n} from \"react-icons/bs\";\r\nimport {\r\n    RiGenderlessFill,\r\n    RiLockPasswordFill,\r\n    RiMailFill,\r\n} from \"react-icons/ri\";\r\nimport { DatePicker, LocalizationProvider } from \"@mui/lab\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { styled } from \"@mui/system\";\r\nimport \"./Register.css\";\r\nimport { useState } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ValidationTextField = styled(TextField)({\r\n    \"& input:valid + fieldset\": {\r\n        borderColor: \"white\",\r\n    },\r\n    \"& input:valid:focus + fieldset\": {\r\n        borderLeftWidth: 6,\r\n        borderColor: \"#fff\", // override inline-style\r\n    },\r\n    \"& input:valid:hover + fieldset\": {\r\n        borderColor: \"white\",\r\n    },\r\n});\r\n\r\nconst Register = () => {\r\n    const [b_date, setB_date] = useState(moment());\r\n    const [gender, setGender] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(false)\r\n\r\n    const handleChange = (event) => {\r\n        setGender(event.target.value);\r\n    };\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        watch,\r\n        formState: { errors },\r\n    } = useForm();\r\n    const onSubmit = (data) => {\r\n        const birthdate = b_date.format(\"YYYY-DD-MM\");\r\n        console.log({ ...data, gender, birthdate });\r\n        fetch(\"https://tfhrm.herokuapp.com/api/create/\", {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'content-type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({ ...data, gender, birthdate }),\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => console.log(res));\r\n    };\r\n    return (\r\n        <LocalizationProvider dateAdapter={DateAdapter}>\r\n            <h3>Register To Get A Career</h3>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} lg={6} className=\"input\">\r\n                        <ValidationTextField\r\n                            fullWidth\r\n                            type=\"firstName\"\r\n                            id=\"firstName\"\r\n                            label=\" First Name\"\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <IconContext.Provider\r\n                                            value={{ color: \"white\" }}\r\n                                        >\r\n                                            <FaUserAlt />\r\n                                        </IconContext.Provider>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            {...register(\"full_name\", { required: true })}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={6}>\r\n                        <ValidationTextField\r\n                            fullWidth\r\n                            type=\"phone\"\r\n                            id=\"phone\"\r\n                            label=\"Phone Number\"\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <IconContext.Provider\r\n                                            value={{ color: \"white\" }}\r\n                                        >\r\n                                            <BsFillTelephoneFill />\r\n                                        </IconContext.Provider>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            {...register(\"phone\", { required: true })}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={6}>\r\n                        <LocalizationProvider dateAdapter={DateAdapter}>\r\n                            <DatePicker\r\n                                label=\"Last date to apply\"\r\n                                value={b_date}\r\n                                onChange={(newValue) => {\r\n                                    setB_date(newValue);\r\n                                }}\r\n                                renderInput={(params) => (\r\n                                    <TextField fullWidth {...params} />\r\n                                )}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={6} className=\"input\">\r\n                        <ValidationTextField\r\n                            fullWidth\r\n                            id=\"nationality\"\r\n                            label=\"Nationality\"\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <IconContext.Provider\r\n                                            value={{ color: \"white\" }}\r\n                                        >\r\n                                            <FaPassport />\r\n                                        </IconContext.Provider>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            {...register(\"nationality\", { required: true })}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={6} className=\"input\">\r\n                        <ValidationTextField\r\n                            fullWidth\r\n                            id=\"nid\"\r\n                            label=\"NID\"\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <IconContext.Provider\r\n                                            value={{ color: \"white\" }}\r\n                                        >\r\n                                            <BsFillCreditCard2FrontFill />\r\n                                        </IconContext.Provider>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            {...register(\"nid\", { required: true })}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={6}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel shrink id=\"demo-simple-select-label\">\r\n                                Gender\r\n                            </InputLabel>\r\n                            <IconContext.Provider\r\n                                value={{\r\n                                    color: \"white\",\r\n                                    size: \"32px\",\r\n                                    className: \"gender-icon\",\r\n                                }}\r\n                            >\r\n                                <Select\r\n                                    input={\r\n                                        <OutlinedInput\r\n                                            notched\r\n                                            label=\"Gender\"\r\n                                            sx={{\r\n                                                flexDirection: \"row-reverse\",\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                    labelId=\"gender\"\r\n                                    id=\"gender\"\r\n                                    value={gender}\r\n                                    onChange={handleChange}\r\n                                    label=\"Gender\"\r\n                                    IconComponent={() => <RiGenderlessFill />}\r\n                                >\r\n                                    <MenuItem value=\"Male\">Male</MenuItem>\r\n                                    <MenuItem value=\"Female\">Female</MenuItem>\r\n                                    <MenuItem value=\"Other\">Others</MenuItem>\r\n                                </Select>\r\n                            </IconContext.Provider>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={12}>\r\n                        <ValidationTextField\r\n                            fullWidth\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            label=\"Email\"\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <IconContext.Provider\r\n                                            value={{ color: \"white\" }}\r\n                                        >\r\n                                            <RiMailFill />\r\n                                        </IconContext.Provider>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            {...register(\"email\", { required: true })}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={6}>\r\n                        <ValidationTextField\r\n                            fullWidth\r\n                            className={`form-control ${errors.confirmPassword ? 'is-invalid' : ''}`}\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <IconContext.Provider\r\n                                            value={{ color: \"white\" }}\r\n                                        >\r\n                                            <RiLockPasswordFill />\r\n                                        </IconContext.Provider>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            {...register(\"password\", { required: true })}\r\n                        />\r\n                        <div className=\"invalid-feedback\">{errors.password?.message}</div>\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={6}>\r\n                        <ValidationTextField\r\n                            fullWidth\r\n                            type=\"password\"\r\n                            error={passwordError}\r\n                            id={`confirmPassword ${passwordError && \"outlined-error\"}`}\r\n                            label=\"Confirm Password\"\r\n                            onChange={(e)=> {\r\n                                e.target.value !== watch().password ? setPasswordError(true) : setPasswordError(false)\r\n                            }}\r\n                            helperText={passwordError ? 'paswword dont match' : ' '}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <IconContext.Provider\r\n                                            value={{ color: \"white\" }}\r\n                                            >\r\n                                            <RiLockPasswordFill />\r\n                                        </IconContext.Provider>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n                <Grid sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                    <Button type=\"submit\" sx={{ mt: 3 }} variant=\"contained\">\r\n                        Sign UP\r\n                    </Button>\r\n                </Grid>\r\n            </form>\r\n        </LocalizationProvider>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","export default __webpack_public_path__ + \"static/media/logo.b9dbdd5a.png\";","import { useLocation } from \"react-router\";\r\nimport Login from \"./Login/Login\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Register from \"./Register/Register\";\r\n\r\nimport logo from \"../../images/logo.png\"\r\nimport './authentication.css'\r\n\r\nconst Authentication = () => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <main className=\"mainAuthcontainer\">\r\n            <div className=\"auth-row\">\r\n                <div className=\"auth-container\">\r\n                    <div className=\"auth-links\">\r\n                        <NavLink\r\n                        to='/login' \r\n                        >Sign In</NavLink>\r\n                        <NavLink to='/register' >Sign Up </NavLink>\r\n                    </div>\r\n                    <div className=\"auth-form\">\r\n                    {(location.pathname === \"/login\") ? <Login /> : (location.pathname === \"/register\") && <Register />}\r\n                    </div>\r\n                </div>\r\n                <div className=\"auth-detail\">\r\n                    <div className=\"auth-detail_img\">\r\n                        <img src={logo} alt=\"techforing\" />\r\n                        <i>Shaping Tomorrow’s Cybersecurity</i>\r\n                    </div>\r\n                    <div className=\"auth-detail_text\">\r\n                    <h1>Welcome to TechForing</h1>\r\n                    <p className=\"auth-detail_notice\">\r\n                        <span>Notice: </span><br />\r\n                        <strong>An applicant can register only once.</strong><br />\r\n                        Registered applicant, please login with your credentials\r\n                        by entering email and password\r\n                    </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Authentication;\r\n","import { Box } from \"@mui/system\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n    Button,\r\n    TextareaAutosize,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport DatePicker from \"@mui/lab/DatePicker\";\r\nimport moment from \"moment\";\r\nimport DateAdapter from \"@mui/lab/AdapterMoment\";\r\nimport { useState } from \"react\";\r\n\r\nconst Experience = () => {\r\n    const [startDate, setStartDate] = useState(moment());\r\n    const [endDate, setEndDate] = useState(moment());\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n    } = useForm();\r\n\r\n    const onSubmit = (data) => console.log(data);\r\n    return (\r\n        <div>\r\n            <h3>Work Experience / Assignment Experience</h3>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Box sx={{ my: 3 }}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"organization\"\r\n                        label=\"Organization Name\"\r\n                        variant=\"outlined\"\r\n                        {...register(\"organization\", {\r\n                            required: \"this field is required\",\r\n                        })}\r\n                    />\r\n                </Box>\r\n                <Box sx={{ my: 3 }}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"department\"\r\n                        label=\"Department Name\"\r\n                        variant=\"outlined\"\r\n                        {...register(\"department\", {\r\n                            required: \"this field is required\",\r\n                        })}\r\n                    />\r\n                </Box>\r\n                <Box sx={{ my: 3 }}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"position\"\r\n                        label=\"Position held\"\r\n                        variant=\"outlined\"\r\n                        {...register(\"position\", {\r\n                            required: \"this field is required\",\r\n                        })}\r\n                    />\r\n                </Box>\r\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                    <LocalizationProvider dateAdapter={DateAdapter}>\r\n                        <DatePicker\r\n                            label=\"From\"\r\n                            value={startDate}\r\n                            onChange={(newValue) => {\r\n                                setStartDate(newValue);\r\n                            }}\r\n                            renderInput={(params) => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    helperText={null}\r\n                                    {...register(\"startDate\", {\r\n                                        required: \"this field is required\",\r\n                                    })}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <DatePicker\r\n                            label=\"to\"\r\n                            value={endDate}\r\n                            onChange={(newValue) => {\r\n                                setEndDate(newValue);\r\n                            }}\r\n                            renderInput={(params) => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    helperText={null}\r\n                                    {...register(\"endDate\", {\r\n                                        required: \"this field is required\",\r\n                                    })}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </LocalizationProvider>\r\n                    <TextField\r\n                        id=\"totalDuration\"\r\n                        label=\"Tota Duration\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Box>\r\n                <Box sx={{ my: 3 }}>\r\n                    <TextareaAutosize\r\n                        aria-label=\"Major Responsibilities\"\r\n                        minRows={5}\r\n                        placeholder=\"Major Responsibilities\"\r\n                        style={{ width: \"100%\" }}\r\n                        {...register(\"responsibility\", {\r\n                            required: \"this field is required\",\r\n                        })}\r\n                    />\r\n                </Box>\r\n                <Button type=\"submit\" variant=\"outlined\">\r\n                    Save\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Experience;\r\n","import \"./cetificates.css\"\r\nimport { Box } from \"@mui/system\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n    Button,\r\n    Divider,\r\n    TextField,\r\n} from \"@mui/material\";\r\nconst Certificates = () => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n    } = useForm();\r\n    const onSubmit = (data) => console.log(data);\r\n    return (\r\n        <div>\r\n            <h3>Certifications</h3>\r\n            <Divider />\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Box sx={{ my: 3 }}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"vendorName\"\r\n                        label=\"Vendor Name\"\r\n                        variant=\"outlined\"\r\n                        {...register(\"vendorName\", {\r\n                            required: \"this field is required\",\r\n                        })}\r\n                    />\r\n                </Box>\r\n                <Box sx={{ my: 3 }}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"topic\"\r\n                        label=\"Subject/ Topic/ Exam\"\r\n                        variant=\"outlined\"\r\n                        {...register(\"topic\", {\r\n                            required: \"this field is required\",\r\n                        })}\r\n                    />\r\n                </Box>\r\n                <Box sx={{ my: 3 }}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"subject\"\r\n                        label=\"Subject/Group/Major\"\r\n                        variant=\"outlined\"\r\n                        {...register(\"subject\", {\r\n                            required: \"this field is required\",\r\n                        })}\r\n                    />\r\n                </Box>\r\n                <Box sx={{ my: 3 }}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"score\"\r\n                        label=\"Pass/ Fail/ Score \"\r\n                        variant=\"outlined\"\r\n                        {...register(\"score\", {\r\n                            required: \"this field is required\",\r\n                        })}\r\n                    />\r\n                </Box>\r\n                <Box sx={{ my: 3 }}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"certificationId\"\r\n                        label=\"Certificate ID No.\"\r\n                        variant=\"outlined\"\r\n                        {...register(\"certificationId\", {\r\n                            required: \"this field is required\",\r\n                        })}\r\n                    />\r\n                </Box>\r\n                <Button type=\"submit\" sx={{ mt: 3 }} variant=\"outlined\">\r\n                    Save\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Certificates\r\n","import { useForm } from \"react-hook-form\";\r\nimport {\r\n    Button,\r\n    Divider,\r\n    FormControl,\r\n    Grid,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n} from \"@mui/material\";\r\n\r\nconst JobPreferences = () => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n    } = useForm();\r\n    const onSubmit = (data) => console.log(data);\r\n    return (\r\n        <div>\r\n            <h3 style={{ marginBottom: '1rem' }}>Academic Info</h3>\r\n            <Divider />\r\n            <form style={{ marginTop: '2rem' }} onSubmit={handleSubmit(onSubmit)}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} >\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">\r\n                                Preffered Post\r\n                            </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"prefferedPost\"\r\n                                label=\"Preffered Post\"\r\n                                defaultValue=\"\"\r\n                                {...register(\"prefferedPost\")}\r\n                            >\r\n                                <MenuItem value={\"Secondary\"}>Secondary</MenuItem>\r\n                                <MenuItem value={\"Higher Secondary\"}>\r\n                                    Higher Secondary\r\n                                </MenuItem>\r\n                                <MenuItem value={\"Diploma\"}>Diploma</MenuItem>\r\n                                <MenuItem value={\"Bachelors / Honors\"}>\r\n                                    Bachelors / Honors\r\n                                </MenuItem>\r\n                                <MenuItem value={\"Masters\"}>Masters</MenuItem>\r\n                                <MenuItem value={\"Phd (doctor of philosophy)\"}>\r\n                                    Phd (doctor of philosophy)\r\n                                </MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} >\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">\r\n                                Preffered Shift\r\n                            </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"prefferedPost\"\r\n                                label=\"Preffered Shift\"\r\n                                defaultValue=\"\"\r\n                                {...register(\"prefferedShift\")}\r\n                            >\r\n                                <MenuItem value={\"Secondary\"}>Secondary</MenuItem>\r\n                                <MenuItem value={\"Higher Secondary\"}>\r\n                                    Higher Secondary\r\n                                </MenuItem>\r\n                                <MenuItem value={\"Diploma\"}>Diploma</MenuItem>\r\n                                <MenuItem value={\"Bachelors / Honors\"}>\r\n                                    Bachelors / Honors\r\n                                </MenuItem>\r\n                                <MenuItem value={\"Masters\"}>Masters</MenuItem>\r\n                                <MenuItem value={\"Phd (doctor of philosophy)\"}>\r\n                                    Phd (doctor of philosophy)\r\n                                </MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"salaryRangeFrom\"\r\n                            label=\"Salary Range From\"\r\n                            variant=\"outlined\"\r\n                            {...register(\"salaryRangeFrom\", {\r\n                                required: \"this field is required\",\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"salaryRangeTo\"\r\n                            label=\"Salary Range to\"\r\n                            variant=\"outlined\"\r\n                            {...register(\"salaryRangeTo\", {\r\n                                required: \"this field is required\",\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button type=\"submit\" sx={{ mt: 3 }} variant=\"outlined\">\r\n                    Save\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobPreferences\r\n","import { Box } from \"@mui/system\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n    Button,\r\n    Divider,\r\n    TextField,\r\n} from \"@mui/material\";\r\n\r\nconst Trainings = () => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n    } = useForm();\r\n    const onSubmit = (data) => console.log(data);\r\n    return (\r\n        <div>\r\n            <h3>Training</h3>\r\n            <Divider />\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Box sx={{ my: 3 }}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"topic\"\r\n                        label=\"Subject/ Topic Name\"\r\n                        variant=\"outlined\"\r\n                        {...register(\"topic\", {\r\n                            required: \"this field is required\",\r\n                        })}\r\n                    />\r\n                </Box>\r\n                <Box sx={{ my: 3 }}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"vendorName\"\r\n                        label=\"Vendor Name\"\r\n                        variant=\"outlined\"\r\n                        {...register(\"vendorName\", {\r\n                            required: \"this field is required\",\r\n                        })}\r\n                    />\r\n                </Box>\r\n                <Box sx={{ my: 3 }}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"duration\"\r\n                        label=\"Duration\"\r\n                        variant=\"outlined\"\r\n                        {...register(\"duration\", {\r\n                            required: \"this field is required\",\r\n                        })}\r\n                    />\r\n                </Box>\r\n                <Button type=\"submit\" sx={{ mt: 3 }} variant=\"outlined\">\r\n                    Save\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Trainings\r\n","import { ErrorMessage } from \"@hookform/error-message\";\r\nimport { Button, Divider,  TextField } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nconst Input = styled(\"input\")({\r\n    display: \"none\",\r\n});\r\n\r\nconst UploadCV = () => {\r\n    const [file, setFile] = useState(\"\");\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        watch,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    const onSubmit = (data) => console.log(data);\r\n\r\n    useEffect(() => {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (watch(\"CV\") && watch(\"CV\").length != 0)\r\n            setFile(watch(\"CV\")[0].name);\r\n        else setFile(\"Please enter your cv\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [watch(\"CV\")]);\r\n    return (\r\n        <>\r\n            <h3 style={{ textTransform: \"uppercase\" }}>Upload CV</h3>\r\n            <Divider />\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Box sx={{my: 3}}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"title\"\r\n                        label=\"Title\"\r\n                        variant=\"outlined\"\r\n                        {...register(\"title\", {\r\n                            required: \"This field is required\",\r\n                        })}\r\n                    />\r\n                    <ErrorMessage errors={errors} name=\"title\" />\r\n                </Box>\r\n                <Box>\r\n                    <label htmlFor=\"contained-button-file\">\r\n                        <Input\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            {...register(\"CV\", {\r\n                                required: \"This field is required\",\r\n                            })}\r\n                        />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            component=\"span\"\r\n                            sx={{ backgroundColor: \"#182a59\" }}\r\n                        >\r\n                            choose file\r\n                        </Button>\r\n                        <span\r\n                            style={{\r\n                                color: \"#ddd\",\r\n                                marginLeft: \"1rem\",\r\n                                textTransform: \"uppercase\",\r\n                            }}\r\n                        >\r\n                            {file}\r\n                        </span>\r\n                    </label>\r\n                    <ErrorMessage errors={errors} name=\"CV\" />\r\n                </Box>\r\n                <Button type=\"submit\" sx={{ mt: 3 }} variant=\"outlined\">\r\n                    Upload CV\r\n                </Button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UploadCV;\r\n","import React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nconst DataTable = ({ theads, rows }) => {\r\n    console.log(rows);\r\n\r\n    return (\r\n\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        {\r\n                            theads.map((thead) => <TableCell>{thead}</TableCell>)\r\n                        }\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map((row, index) => (\r\n                        <TableRow\r\n                            key={index}\r\n\r\n                        >\r\n                            {\r\n                                Object.keys(row).map(item => <TableCell align=\"center\" component=\"th\" scope=\"row\">{row[item]}</TableCell>)\r\n                            }\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n\r\n    );\r\n};\r\n\r\nexport default DataTable;","\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n    Button,\r\n    Divider,\r\n    FormControl,\r\n    Grid,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport DatePicker from \"@mui/lab/DatePicker\";\r\nimport moment from \"moment\";\r\nimport DateAdapter from \"@mui/lab/AdapterMoment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport DataTable from \"../DataTable/DataTable\";\r\n\r\n\r\nconst Educations = () => {\r\n\r\n    const [gradYear, setGradYear] = useState(moment());\r\n    const [rows, setRows] = useState([]);\r\n    const theads = ['Education Level', 'Degree', 'Institute', 'Subject', 'Graduation Year', 'Duration', 'GPA/CGPA'];\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n    } = useForm();\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        setRows([...rows, data])\r\n        reset();\r\n    };\r\n    useEffect(() => {\r\n        console.log(rows)\r\n    }, [rows])\r\n    return (\r\n        <div>\r\n            <h3 style={{ marginBottom: '1rem' }}>Academic Info</h3>\r\n            <Divider />\r\n            <DataTable theads={theads} rows={rows} />\r\n            <h3 style={{ marginTop: '1.5rem' }}>Provide Your Academic Info</h3>\r\n            <Divider />\r\n            <form style={{ marginTop: '2rem' }} onSubmit={handleSubmit(onSubmit)}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} >\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">\r\n                                Education Level\r\n                            </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                label=\"Education Level\"\r\n                                defaultValue=\"\"\r\n                                {...register(\"educationLevel\")}\r\n                            >\r\n                                <MenuItem value={\"Secondary\"}>Secondary</MenuItem>\r\n                                <MenuItem value={\"Higher Secondary\"}>\r\n                                    Higher Secondary\r\n                                </MenuItem>\r\n                                <MenuItem value={\"Diploma\"}>Diploma</MenuItem>\r\n                                <MenuItem value={\"Bachelors / Honors\"}>\r\n                                    Bachelors / Honors\r\n                                </MenuItem>\r\n                                <MenuItem value={\"Masters\"}>Masters</MenuItem>\r\n                                <MenuItem value={\"Phd (doctor of philosophy)\"}>\r\n                                    Phd (doctor of philosophy)\r\n                                </MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"degree\"\r\n                            label=\"Degree title\"\r\n                            variant=\"outlined\"\r\n                            {...register(\"degree\", {\r\n                                required: \"this field is required\",\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"institute\"\r\n                            label=\"Institute Name\"\r\n                            variant=\"outlined\"\r\n                            {...register(\"institute\", {\r\n                                required: \"this field is required\",\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"subject\"\r\n                            label=\"Subject/Group/Major\"\r\n                            variant=\"outlined\"\r\n                            {...register(\"subject\", {\r\n                                required: \"this field is required\",\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                        <LocalizationProvider dateAdapter={DateAdapter}>\r\n                            <DatePicker\r\n                                views={[\"year\"]}\r\n                                label=\"Graduation Year\"\r\n                                value={gradYear}\r\n                                onChange={(newValue) => {\r\n                                    setGradYear(newValue);\r\n                                }}\r\n                                renderInput={(params) => (\r\n                                    <TextField fullWidth {...params} {...register(\"gradYear\", { required: \"this field is required\" })} />\r\n                                )}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"duration\"\r\n                            label=\"Duration\"\r\n                            variant=\"outlined\"\r\n                            {...register(\"duration\", {\r\n                                required: \"this field is required\",\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"result\"\r\n                            label=\"Score/GPA/CGPA/\"\r\n                            variant=\"outlined\"\r\n                            {...register(\"result\", {\r\n                                required: \"this field is required\",\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button type=\"submit\" sx={{ mt: 3 }} variant=\"outlined\">\r\n                    Save\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Educations;\r\n","import {\r\n    Autocomplete,\r\n    Button,\r\n    Divider,\r\n    Stack,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport {useForm } from \"react-hook-form\";\r\nconst options = [\r\n    { value: \"chocolate\", label: \"Chocolate\" },\r\n    { value: \"strawberry\", label: \"Strawberry\" },\r\n    { value: \"vanilla\", label: \"Vanilla\" },\r\n];\r\nconst Skills = () => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n    } = useForm();\r\n    const onSubmit = (data) => console.log(data);\r\n    return (\r\n        <div>\r\n            <h3>Academic Info</h3>\r\n            <Divider />\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Stack sx={{ my: 3 }}>\r\n                    {/* <Controller\r\n                        control={control}\r\n                         defaultValue={[]}\r\n                         name=\"skills\"\r\n                         render={({ field }) => {\r\n                           const { onChange, value, name, ref } = field\r\n                           return (\r\n                             <Creatable\r\n                               name={name}\r\n                               inputRef={ref}\r\n                               options={options}\r\n                               value={options.find((c) => c.id === value)}\r\n                               onChange={(val) => {\r\n                                 onChange(val)\r\n                               }}\r\n                               isMulti\r\n                             />\r\n                        )}}\r\n                    /> */}\r\n                    <Autocomplete\r\n                        multiple\r\n                        id=\"tags-outlined\"\r\n                        options={options}\r\n                        getOptionLabel={(option) => option.label}\r\n                        defaultValue={[]}\r\n                        filterSelectedOptions\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                            {...register(\"skills\")}\r\n                                {...params}\r\n                                label=\"Skills\"\r\n                                placeholder=\"Skills\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </Stack>\r\n                <Button type=\"submit\" sx={{ mt: 3 }} variant=\"outlined\">\r\n                    Save\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Skills;\r\n","import { DatePicker, LocalizationProvider } from \"@mui/lab\";\r\nimport { Button, Divider, FormControl, Grid, IconButton,  InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport DateAdapter from \"@mui/lab/AdapterMoment\";\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\nimport { MdCameraAlt } from \"react-icons/md\";\r\nimport {  styled } from \"@mui/system\";\r\nconst PersonalAttributes = () => {\r\n    const [birthdate, setBirthdate] = useState(moment());\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [rows, setRows] = useState([]);\r\n    // eslint-disable-next-line no-unused-vars\r\n    const theads = ['Education Level', 'Degree', 'Institute', 'Subject', 'Graduation Year', 'Duration', 'GPA/CGPA'];\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        watch,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    const Input = styled('input')({\r\n        display: 'none',\r\n    });\r\n    useEffect(() => {\r\n        console.log(rows)\r\n    }, [rows]);\r\n\r\n    const [file, setFile] = useState(\"\");\r\n\r\n    const onSubmit = (data) => console.log(data);\r\n\r\n    useEffect(() => {\r\n        if (watch(\"CV\") && watch(\"CV\").length !== 0)\r\n            setFile(watch(\"CV\")[0].name);\r\n        else setFile(\"Please enter your cv\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [watch(\"CV\")]);\r\n\r\n    return (\r\n        <div>\r\n            <h3 style={{ marginBottom: '.5rem' }}>Provide Your Personal Info</h3>\r\n            <Divider />\r\n            <form style={{ marginTop: '2rem' }} onSubmit={handleSubmit(onSubmit)}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item md={6} xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"fullname\"\r\n                            label=\"Full Name\"\r\n                            variant=\"outlined\"\r\n                            {...register(\"fullname\", {\r\n                                required: \"this field is required\",\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                        <LocalizationProvider dateAdapter={DateAdapter}>\r\n                            <DatePicker\r\n                                label=\"Birthdate\"\r\n                                value={birthdate}\r\n                                onChange={(newValue) => {\r\n                                    setBirthdate(newValue);\r\n                                }}\r\n                                renderInput={(params) => (\r\n                                    <TextField fullWidth {...params} helperText={null}  {...register(\"birthdate\", { required: \"this field is required\" })} />\r\n                                )}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            variant=\"outlined\"\r\n                            {...register(\"email\", {\r\n                                required: \"this field is required\",\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"phone\"\r\n                            label=\"Phone Number\"\r\n                            variant=\"outlined\"\r\n                            {...register(\"phone\", {\r\n                                required: \"this field is required\",\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item md={6} xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"nationality\"\r\n                            label=\"Nationality\"\r\n                            variant=\"outlined\"\r\n                            {...register(\"nationality\", {\r\n                                required: \"this field is required\",\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"nid\"\r\n                            label=\"NID\"\r\n                            variant=\"outlined\"\r\n                            {...register(\"nid\", {\r\n                                required: \"this field is required\",\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item md={6} xs={12}>\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Input\r\n\r\n                                id=\"contained-button-file\"\r\n                                type=\"file\"\r\n                                {...register(\"CV\", {\r\n                                    required: \"This field is required\",\r\n                                })}\r\n                            />\r\n                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                <MdCameraAlt />\r\n                            </IconButton>\r\n                            <span\r\n                                style={{\r\n                                    color: \"#ddd\",\r\n                                    marginLeft: \"1rem\",\r\n                                    textTransform: \"uppercase\",\r\n                                    paddingBottom: '10px',\r\n                                    borderBottom: '1px solid'\r\n                                }}\r\n                            >\r\n                                {file}\r\n                            </span>\r\n                        </label>\r\n                        <ErrorMessage errors={errors} name=\"CV\" />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">\r\n                                Gender\r\n                            </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                label=\"Gender\"\r\n                                defaultValue=\"\"\r\n                                {...register(\"gender\")}\r\n                            >\r\n                                <MenuItem value={\"Male\"}>Male</MenuItem>\r\n                                <MenuItem value={\"Female\"}>\r\n                                    Female\r\n                                </MenuItem>\r\n                                <MenuItem value={\"Others\"}>Others</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"country\"\r\n                            label=\"Country\"\r\n                            variant=\"outlined\"\r\n                            {...register(\"country\", {\r\n                                required: \"this field is required\",\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"address\"\r\n                            label=\"Address\"\r\n                            variant=\"outlined\"\r\n                            {...register(\"address\", {\r\n                                required: \"this field is required\",\r\n                            })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button type=\"submit\" sx={{ mt: 3 }} variant=\"outlined\">\r\n                    Save\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonalAttributes\r\n","import { useEffect,  useState } from \"react\";\r\nimport Navigation from \"./../Shared/Navigation/Navigation\";\r\nimport {\r\n    Grid,\r\n    List,\r\n    ListItem,\r\n    ListItemButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\r\nimport { BiCertification } from \"react-icons/bi\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\nimport { MdWorkOutline } from \"react-icons/md\";\r\nimport { VscReplaceAll } from \"react-icons/vsc\";\r\nimport { GiGears, GiGraduateCap } from \"react-icons/gi\";\r\nimport { HiOutlineCloudUpload } from \"react-icons/hi\";\r\nimport Experience from \"./Experience/Experience\";\r\n\r\nimport \"./cv.css\";\r\nimport Certificates from \"./Certificates/Certificates\";\r\nimport JobPreferences from \"./JobPreferences/JobPreferences\";\r\nimport Trainings from \"./Trainings/Trainings\";\r\nimport UploadCV from \"./UploadCV/UploadCV\";\r\nimport Educations from \"./Education/Educations\";\r\nimport Skills from './Skills/Skills';\r\nimport PersonalAttributes from \"./PersonalAttributes/PersonalAttributes\";\r\n\r\nconst CV = () => {\r\n    const [cvForm, setCvForm] = useState(\"\");\r\n    useEffect(() => {\r\n        const cvSection = document.querySelectorAll(\".cvSection\")\r\n        cvSection.forEach(item => {\r\n            item.addEventListener(\"click\", () => {\r\n                cvSection.forEach(item => item.classList.remove(\"active\"))\r\n                item.classList.add(\"active\")\r\n            })\r\n        })\r\n    }, [])\r\n    return (\r\n        <IconContext.Provider value={{ color: \"#182a59\" }}>\r\n            <Navigation />\r\n            <Grid container spacing={3} sx={{ p: 3, mt: 8 }}>\r\n                <Grid item lg={3} md={3} xs={12}>\r\n                    <Box sx={{ bgcolor: \"#cfe8fc\", mb: 5 }}>\r\n                        <List>\r\n                            <ListItem\r\n                                disablePadding\r\n                                sx={{ color: \"#182a59\" }}\r\n                                onClick={() => setCvForm(\"personalInfo\")}\r\n                                className=\"active cvSection\"\r\n                            >\r\n                                <ListItemButton>\r\n                                    <ListItemIcon>\r\n                                        <AiOutlineInfoCircle />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Presonal Information\" />\r\n                                </ListItemButton>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                disablePadding\r\n                                sx={{ color: \"#182a59\" }}\r\n                                onClick={() => setCvForm(\"education\")}\r\n                                className=\"cvSection\"\r\n                            >\r\n                                <ListItemButton>\r\n                                    <ListItemIcon>\r\n                                        <GiGraduateCap />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Educations\" />\r\n                                </ListItemButton>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                disablePadding\r\n                                className=\"cvSection\"\r\n                                onClick={() => setCvForm(\"workExperience\")}\r\n                            >\r\n                                <ListItemButton>\r\n                                    <ListItemIcon>\r\n                                        <MdWorkOutline />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Work Experience\" />\r\n                                </ListItemButton>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                disablePadding\r\n                                className=\"cvSection\"\r\n                                onClick={() => setCvForm(\"certificate\")}\r\n                            >\r\n                                <ListItemButton>\r\n                                    <ListItemIcon>\r\n                                        <BiCertification />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Certificates\" />\r\n                                </ListItemButton>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                disablePadding\r\n                                onClick={() => setCvForm(\"training\")}\r\n                                className=\"cvSection\"\r\n                            >\r\n                                <ListItemButton>\r\n                                    <ListItemIcon>\r\n                                        <FaChalkboardTeacher />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Training\" />\r\n                                </ListItemButton>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                disablePadding\r\n                                className=\"cvSection\"\r\n                                onClick={() => setCvForm(\"jobPreference\")}\r\n                            >\r\n                                <ListItemButton>\r\n                                    <ListItemIcon>\r\n                                        <VscReplaceAll />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Job Preferences\" />\r\n                                </ListItemButton>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                disablePadding\r\n                                className=\"cvSection\"\r\n                                onClick={() => setCvForm(\"skills\")}\r\n                            >\r\n                                <ListItemButton>\r\n                                    <ListItemIcon>\r\n                                        <GiGears />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Skills\" />\r\n                                </ListItemButton>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                disablePadding\r\n                                className=\"cvSection\"\r\n                                onClick={() => setCvForm(\"upLoadCv\")}\r\n                            >\r\n                                <ListItemButton>\r\n                                    <ListItemIcon>\r\n                                        <HiOutlineCloudUpload />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Upload CV\" />\r\n                                </ListItemButton>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Box>\r\n                </Grid>\r\n\r\n                <Grid item lg={9} md={9} xs={12}>\r\n                    {cvForm === \"education\" ? (\r\n                        <Educations />\r\n                    ) : cvForm === \"workExperience\" ? (\r\n                        <Experience />\r\n                    ) : cvForm === \"skills\" ? (\r\n                        <Skills />\r\n                    ) : cvForm === \"certificate\" ? (\r\n                        <Certificates />\r\n                    ) : cvForm === \"training\" ? (\r\n                        <Trainings />\r\n                    ) : cvForm === \"jobPreference\" ? (\r\n                        <JobPreferences />\r\n                    ) : cvForm === \"upLoadCv\" ? (\r\n                        <UploadCV />\r\n                    ) : (\r\n                        <PersonalAttributes />\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </IconContext.Provider>\r\n    );\r\n};\r\n\r\nexport default CV;\r\n","import { TextField } from \"@mui/material\";\r\n\r\nconst FilterQuestions = () => {\r\n    return (\r\n        <div>\r\n            <TextField\r\n                multiline={true}\r\n                minRows={3}\r\n                maxRows={12}\r\n                variant=\"outlined\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilterQuestions;\r\n","import Navigation from './../Shared/Navigation/Navigation';\r\nimport { Main } from './../hooks/Main';\r\nimport FilterQuestions from './FilterQuestions/FilterQuestions';\r\nconst Apply = () => {\r\n    return (\r\n        <>\r\n            <Navigation />\r\n            <Main>\r\n                <h3>Apply to the job</h3>\r\n                <FilterQuestions />\r\n            </Main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Apply\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    Box,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport Positions from \"../Positions/Positions\";\r\nimport { Main } from \"./../../../hooks/Main\";\r\nimport JobFilters from \"./../JobFilters/JobFilters\";\r\nimport Navigation from \"../../../Shared/Navigation/Navigation\";\r\nimport Sidebar from \"../../../Shared/Sidebar/Sidebar\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst JobOpenings = () => {\r\n    const [open, setOpen] = useState(false);\r\n    return (\r\n        <>\r\n            <Navigation open={open} />\r\n            <Sidebar open={open} setOpen={setOpen} />\r\n            <Main>\r\n                <Typography\r\n                    component=\"div\"\r\n                    sx={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                    <h2>Our Job Opening</h2>\r\n                    <NavLink to=\"/create_opening\">Create New job Post</NavLink>\r\n                </Typography>\r\n                <JobFilters />\r\n                <Box sx={{ flexGrow: 1, mt: 3 }}>\r\n                    <Grid container spacing={3}>\r\n                        <Positions />\r\n                    </Grid>\r\n                </Box>\r\n            </Main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default JobOpenings;\r\n","// import { DataGrid } from '@mui/x-data-grid';\r\n// import { useDemoData } from '@mui/x-data-grid-generator';\r\nconst Canddates = () => {\r\n  // const { data } = useDemoData({\r\n  //   dataSet: 'Commodity',\r\n  //   rowLength: 5,\r\n  //   maxColumns: 6,\r\n  // });\r\n  return (\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <div style={{ display: 'flex', height: '100%' }}>\r\n        <div style={{ flexGrow: 1 }}>\r\n          {/* <DataGrid {...data} /> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Canddates\r\n","import {\r\n    Paper,\r\n    TextField,\r\n    Grid,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    Button,\r\n} from \"@mui/material\";\r\nimport { useRef, useState } from \"react\";\r\nimport Navigation from \"./../../../Shared/Navigation/Navigation\";\r\nimport Sidebar from \"./../../../Shared/Sidebar/Sidebar\";\r\nimport { Main } from \"./../../../hooks/Main\";\r\nimport { LocalizationProvider, TimePicker } from \"@mui/lab\";\r\nimport DatePicker from \"@mui/lab/DatePicker\";\r\nimport moment from \"moment\";\r\nimport DateAdapter from \"@mui/lab/AdapterMoment\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nconst CreateJobOpenings = () => {\r\n    const [lastDate, setLastDate] = useState(moment());\r\n    const [shiftStart, setShiftStart] = useState(moment());\r\n    const [shiftEnd, setShiftEnd] = useState(moment());\r\n    const [open, setOpen] = useState(false);\r\n    const [level, setLevel] = useState(\"\");\r\n    const [shift, setShift] = useState(\"\");\r\n    const [location, setLocation] = useState(\"\");\r\n    const [department, setDepartment] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n    } = useForm();\r\n    const editorRef = useRef(null);\r\n    const onSubmit = (data) => { \r\n        const validTill= lastDate.format('YYYY-DD-MM')\r\n        const startTime= shiftStart.format('hh-mm')\r\n        const endTime= shiftEnd.format('hh-mm')\r\n        console.log({ ...data, description, validTill,startTime,endTime,level, department, shift, location });\r\n        reset()\r\n    };\r\n    return (\r\n        <>\r\n            <Navigation open={open} />\r\n            <Sidebar open={open} setOpen={setOpen} />\r\n            <Main>\r\n                <h1>Create Job</h1>\r\n                <Paper elevation={3} sx={{ py: 3, px: 2 }}>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item md={6} xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    id=\"postTitle\"\r\n                                    label=\"Post Title\"\r\n                                    variant=\"outlined\"\r\n                                    {...register(\"postTitle\")}\r\n                                />\r\n                            </Grid>\r\n                            <LocalizationProvider dateAdapter={DateAdapter}>\r\n                                <Grid item md={3} xs={12}>\r\n                                    <DatePicker\r\n                                        label=\"Last date to apply\"\r\n                                        value={lastDate}\r\n                                        onChange={(newValue) => {\r\n                                            setLastDate(newValue)\r\n                                        }}\r\n                                        renderInput={(params) => (\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                {...params}\r\n                                                helperText={null}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item md={3} xs={12}>\r\n                                    <TimePicker\r\n                                        label=\"Duty Start time\"\r\n                                        value={shiftStart}\r\n                                        onChange={(newValue) => {\r\n                                            setShiftStart(newValue);\r\n                                        }}\r\n                                        renderInput={(params) => (\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                {...params}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item md={3} xs={12}>\r\n                                    <TimePicker\r\n                                        label=\"End Time\"\r\n                                        value={shiftEnd}\r\n                                        onChange={(newValue) => {\r\n                                            setShiftEnd(newValue);\r\n                                        }}\r\n                                        renderInput={(params) => (\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                {...params}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Grid>\r\n                            </LocalizationProvider>\r\n                            <Grid item md={3} xs={12}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel id=\"demo-simple-select-label\">\r\n                                        Level\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={level}\r\n                                        label=\"Age\"\r\n                                        onChange={(e)=>setLevel(e.target.value)}\r\n                                    >\r\n                                        <MenuItem value={10}>Ten</MenuItem>\r\n                                        <MenuItem value={20}>Twenty</MenuItem>\r\n                                        <MenuItem value={30}>Thirty</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item md={3} xs={12}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel id=\"demo-simple-select-label\">\r\n                                        Shift\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={shift}\r\n                                        label=\"Shift\"\r\n                                        onChange={(e)=> setShift(e.target.value)}\r\n                                    >\r\n                                        <MenuItem value={10}>Ten</MenuItem>\r\n                                        <MenuItem value={20}>Twenty</MenuItem>\r\n                                        <MenuItem value={30}>Thirty</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item md={3} xs={12}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel id=\"demo-simple-select-label\">\r\n                                        Location\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={location}\r\n                                        label=\"Age\"\r\n                                        onChange={(e)=> setLocation(e.target.value)}\r\n                                    >\r\n                                        <MenuItem value={10}>Ten</MenuItem>\r\n                                        <MenuItem value={20}>Twenty</MenuItem>\r\n                                        <MenuItem value={30}>Thirty</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item md={3} xs={12}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel id=\"demo-simple-select-label\">\r\n                                        Department\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={department}\r\n                                        label=\"Age\"\r\n                                        onChange={(e)=> setDepartment(e.target.value)}\r\n                                    >\r\n                                        <MenuItem value={10}>Ten</MenuItem>\r\n                                        <MenuItem value={20}>Twenty</MenuItem>\r\n                                        <MenuItem value={30}>Thirty</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item md={3} xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    id=\"vacancies\"\r\n                                    label=\"Vacancies\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"number\"\r\n                                    {...register(\"vacancies\", {required: \"this field is required\"})}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item md={12} xs={12}>\r\n                                <InputLabel>Job description</InputLabel>\r\n                                <Editor\r\n                                    onInit={(evt, editor) =>\r\n                                        (editorRef.current = editor)\r\n                                    }\r\n                                    init={{\r\n                                        height: 500,\r\n                                        menubar: false,\r\n                                        plugins: [\r\n                                            \"advlist autolink lists link image charmap print preview anchor\",\r\n                                            \"searchreplace visualblocks code fullscreen\",\r\n                                            \"insertdatetime media table paste code help wordcount\",\r\n                                        ],\r\n                                        toolbar:\r\n                                            \"undo redo | formatselect | \" +\r\n                                            \"bold italic backcolor | alignleft aligncenter \" +\r\n                                            \"alignright alignjustify | bullist numlist outdent indent | \" +\r\n                                            \"removeformat | help\",\r\n                                        content_style:\r\n                                            \"body { font-family:Helvetica,Arial,sans-serif; font-size:14px }\",\r\n                                    }}\r\n                                    onEditorChange={(newText) =>\r\n                                        setDescription(newText)\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button type=\"submit\" sx={{ mt: 3 }} variant=\"outlined\">\r\n                            Upload CV\r\n                        </Button>\r\n                    </form>\r\n                </Paper>\r\n            </Main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreateJobOpenings;\r\n","import \"./App.css\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./Pages/Home/Home/Home\";\r\nimport Profile from \"./Pages/Profile/Profile\";\r\nimport Authentication from \"./Pages/Authentication/Authentication\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material\";\r\nimport CV from './Pages/CV/Cv';\r\nimport Apply from './Pages/Apply/Apply';\r\nimport JobOpenings from './Pages/Home/JobOpenings/JobOpenings/JobOpenings';\r\nimport Candidates from './Pages/Candidates/Canddates'\r\nimport CreateJobOpenings from './Pages/Home/JobOpenings/CreateJobOpenings/CreateJobOpenings';\r\nconst theme = createTheme({\r\n    typography: {\r\n        fontFamily: [\r\n          'Poppins',\r\n          'sans-serif',\r\n        ].join(','),\r\n      },\r\n  });\r\nfunction App() {\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Router>\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Home />} />\r\n                    <Route path=\"/home\" element={<Home />} />\r\n                    <Route path=\"/openings\" element={<JobOpenings />} />\r\n                    <Route path=\"/create_opening\" element={<CreateJobOpenings />} />\r\n                    <Route path=\"/apply\" element={<Apply />} />\r\n                    <Route path=\"/profile\" element={<Profile />} />\r\n                    <Route path=\"/cadidates\" element={<Candidates />} />\r\n                    <Route path=\"/profile/edit\" element={<CV />} />\r\n                    <Route path=\"/profileCv\" element={<Profile />} />\r\n                    <Route path=\"/my_jobs\" element={<Profile />} />\r\n                    <Route path=\"/login\" element={<Authentication />} />\r\n                    <Route path=\"/register\" element={<Authentication />} />\r\n                    <Route\r\n                        path=\"*\"\r\n                        element={\r\n                            <main style={{ padding: \"1rem\" }}>\r\n                                <p>There's nothing here!</p>\r\n                            </main>\r\n                        }\r\n                    />\r\n                </Routes>\r\n            </Router>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}