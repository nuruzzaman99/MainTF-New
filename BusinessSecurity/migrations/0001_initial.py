# Generated by Django 3.2.7 on 2021-11-18 06:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('industry_type', models.CharField(choices=[('software_companies', 'Software Companies'), ('government_agencies', 'Government Agencies'), ('law_enforcement', 'Law Enforcement'), ('financial_institutes', 'Financial Institutes'), ('telecommunication_companies', 'Telecommunication Companies'), ('wealth_management', 'Wealth Management'), ('educational_institutes', 'Educational Institute'), ('isp_companies', 'ISP Companies'), ('ecommerce_business', 'Ecommerce Business'), ('law_farm', 'Law Farm'), ('small_and_medium_business', 'Small and Medium Business'), ('health_care_institutes', 'Health Care Institutes')], max_length=264)),
                ('company_name', models.CharField(max_length=264)),
                ('company_logo', models.ImageField(upload_to='company/')),
                ('website', models.URLField(default='https://', max_length=264)),
                ('business_size', models.IntegerField(default=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('unique_id', models.UUIDField(default=uuid.uuid4, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Businesses',
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=264)),
                ('medium', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline')], max_length=264)),
                ('speaker', models.CharField(max_length=264)),
                ('category', models.CharField(choices=[('for_business_security', 'For Business CyberSecurity'), ('for_personal_security', 'For Personal CyberSecurity')], max_length=264)),
                ('address', models.CharField(max_length=264)),
                ('date_field', models.DateField()),
                ('time_field', models.TimeField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'completed'), ('canceled', 'canceled')], max_length=264)),
                ('event_description', tinymce.models.HTMLField(max_length=5000)),
            ],
            options={
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='InputFields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('text', 'text'), ('number', 'number'), ('file', 'file'), ('select', 'select')], max_length=264)),
                ('placeholder', models.CharField(blank=True, max_length=264, null=True)),
            ],
            options={
                'verbose_name_plural': 'Input Fields',
            },
        ),
        migrations.CreateModel(
            name='NewsSubscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_status', models.CharField(choices=[('new', 'New'), ('assigned', 'Assigned'), ('attending', 'Attending'), ('on_progress', 'On Progress'), ('completed', 'Completed'), ('canceled', 'Canceled')], default='new', max_length=250)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('price', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='SelectChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choices', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_icon', models.ImageField(upload_to='service_icon/', verbose_name='Service Icon')),
                ('service_title', models.CharField(max_length=264, verbose_name='Service Title')),
                ('short_description', models.TextField(max_length=1000, verbose_name='Short Description')),
                ('service_header', tinymce.models.HTMLField(blank=True, verbose_name='Service Header')),
                ('service_body', tinymce.models.HTMLField(blank=True, verbose_name='Service Body')),
                ('service_footer', tinymce.models.HTMLField(blank=True, verbose_name='Service Footer')),
                ('has_sub_service', models.BooleanField(default=True, verbose_name='Has Sub Services')),
                ('is_subscription_based', models.BooleanField(default=False, verbose_name='Is Subscription Based')),
                ('total_customer', models.IntegerField(blank=True, default=0, verbose_name='Total Customer')),
            ],
            options={
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=264, verbose_name='Category Name')),
                ('category_description', models.TextField(max_length=1000, verbose_name='Category Description')),
            ],
            options={
                'verbose_name_plural': 'Service Categories',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionBasedPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(max_length=264, verbose_name='Package Name')),
                ('servers', models.IntegerField()),
                ('websites', models.IntegerField()),
                ('workstations', models.IntegerField()),
                ('duration', models.IntegerField()),
                ('duration_type', models.CharField(choices=[('month', 'Month'), ('year', 'Year')], default='month', max_length=264)),
                ('price', models.IntegerField()),
                ('service_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BusinessSecurity.service')),
            ],
            options={
                'verbose_name_plural': 'Subscription Based Packages',
            },
        ),
        migrations.CreateModel(
            name='SubService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=264, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('total_customer', models.IntegerField(blank=True, default=0, verbose_name='Total Customer')),
            ],
            options={
                'verbose_name_plural': 'Sub Services',
            },
        ),
        migrations.CreateModel(
            name='SubServiceInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputfield', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subserviceinput_inputfield', to='BusinessSecurity.inputfields')),
                ('subservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subserviceinput_subservice', to='BusinessSecurity.subservice')),
            ],
            options={
                'db_table': 'BusinessSecurity_subservice_inputfields',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_type', models.CharField(choices=[('bcs', 'BCS'), ('pcs', 'PCS')], max_length=255)),
                ('ticket_category', models.CharField(max_length=255, verbose_name='Category')),
                ('ticket_title', models.CharField(max_length=255, verbose_name='Title')),
                ('ticket_description', tinymce.models.HTMLField(verbose_name='Description')),
                ('ticket_attachment', models.ImageField(upload_to='ticket/', verbose_name='Attachment')),
                ('ticket_status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed')], max_length=255)),
                ('ticket_date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSubserviceInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inputinfo', models.CharField(max_length=255)),
                ('inputfield', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inputfield_input', to='BusinessSecurity.subserviceinput')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_subservice_input', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UsersBusiness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=264)),
                ('privilege', models.CharField(choices=[('admin', 'Admin'), ('member', 'Member')], max_length=264)),
                ('joined_date', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_business', to='BusinessSecurity.business')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='business_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Businesses',
            },
        ),
        migrations.CreateModel(
            name='UserAllowed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allowed_service', to='BusinessSecurity.service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allowed_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Users Allowed',
            },
        ),
        migrations.CreateModel(
            name='TicketStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticketstaff_user', to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticketstaff_order', to='BusinessSecurity.ticket')),
            ],
        ),
        migrations.CreateModel(
            name='TicketComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', tinymce.models.HTMLField()),
                ('comment_date', models.DateTimeField(auto_now_add=True)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticketcomment_ticket', to='BusinessSecurity.ticket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticketcomment_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='subservice',
            name='fields',
            field=models.ManyToManyField(related_name='subservice_inputfields', through='BusinessSecurity.SubServiceInput', to='BusinessSecurity.InputFields'),
        ),
        migrations.AddField(
            model_name='subservice',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subservice_service', to='BusinessSecurity.service'),
        ),
        migrations.CreateModel(
            name='SubscriptionFeatures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_name', models.CharField(max_length=264, verbose_name='Feature Name')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feature_subscription', to='BusinessSecurity.subscriptionbasedpackage')),
            ],
            options={
                'verbose_name_plural': 'Package Features',
            },
        ),
        migrations.AddField(
            model_name='service',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_category', to='BusinessSecurity.servicecategory'),
        ),
        migrations.CreateModel(
            name='SelectChoiceRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_field', models.ManyToManyField(related_name='selectchoicerelation_selectchoice', to='BusinessSecurity.SelectChoice')),
                ('input_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selectchoicerelation_inputfield', to='BusinessSecurity.inputfields')),
            ],
        ),
        migrations.CreateModel(
            name='RegisteredEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registered_event_event', to='BusinessSecurity.events')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registered_event_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Registered Events',
            },
        ),
        migrations.CreateModel(
            name='OrderStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orderstaff_order', to='BusinessSecurity.order')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orderstaff_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_service', to='BusinessSecurity.service'),
        ),
        migrations.AddField(
            model_name='order',
            name='subserviceinput',
            field=models.ManyToManyField(related_name='order_subservice', to='BusinessSecurity.UserSubserviceInput'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_user', to=settings.AUTH_USER_MODEL),
        ),
    ]
